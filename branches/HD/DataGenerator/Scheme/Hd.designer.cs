#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataGenerator.Scheme
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="hd")]
	public partial class HdDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertZamowienie(Zamowienie instance);
    partial void UpdateZamowienie(Zamowienie instance);
    partial void DeleteZamowienie(Zamowienie instance);
    partial void InsertSprzedaz(Sprzedaz instance);
    partial void UpdateSprzedaz(Sprzedaz instance);
    partial void DeleteSprzedaz(Sprzedaz instance);
    partial void InsertReklamacja(Reklamacja instance);
    partial void UpdateReklamacja(Reklamacja instance);
    partial void DeleteReklamacja(Reklamacja instance);
    partial void InsertPrzedstawicielstwo(Przedstawicielstwo instance);
    partial void UpdatePrzedstawicielstwo(Przedstawicielstwo instance);
    partial void DeletePrzedstawicielstwo(Przedstawicielstwo instance);
    partial void InsertModel(Model instance);
    partial void UpdateModel(Model instance);
    partial void DeleteModel(Model instance);
    partial void InsertMagazyn(Magazyn instance);
    partial void UpdateMagazyn(Magazyn instance);
    partial void DeleteMagazyn(Magazyn instance);
    partial void InsertLokalizacja(Lokalizacja instance);
    partial void UpdateLokalizacja(Lokalizacja instance);
    partial void DeleteLokalizacja(Lokalizacja instance);
    partial void InsertKategoria_Czesci(Kategoria_Czesci instance);
    partial void UpdateKategoria_Czesci(Kategoria_Czesci instance);
    partial void DeleteKategoria_Czesci(Kategoria_Czesci instance);
    partial void InsertFirma(Firma instance);
    partial void UpdateFirma(Firma instance);
    partial void DeleteFirma(Firma instance);
    partial void InsertData(Data instance);
    partial void UpdateData(Data instance);
    partial void DeleteData(Data instance);
    partial void InsertDostawca(Dostawca instance);
    partial void UpdateDostawca(Dostawca instance);
    partial void DeleteDostawca(Dostawca instance);
    partial void InsertCzesc_Zamienna(Czesc_Zamienna instance);
    partial void UpdateCzesc_Zamienna(Czesc_Zamienna instance);
    partial void DeleteCzesc_Zamienna(Czesc_Zamienna instance);
    #endregion
		
		public HdDataContext() : 
				base(global::DataGenerator.Properties.Settings.Default.hdConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HdDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HdDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HdDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HdDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Zamowienie> Zamowienies
		{
			get
			{
				return this.GetTable<Zamowienie>();
			}
		}
		
		public System.Data.Linq.Table<Sprzedaz> Sprzedazs
		{
			get
			{
				return this.GetTable<Sprzedaz>();
			}
		}
		
		public System.Data.Linq.Table<Reklamacja> Reklamacjas
		{
			get
			{
				return this.GetTable<Reklamacja>();
			}
		}
		
		public System.Data.Linq.Table<Przedstawicielstwo> Przedstawicielstwos
		{
			get
			{
				return this.GetTable<Przedstawicielstwo>();
			}
		}
		
		public System.Data.Linq.Table<Model> Models
		{
			get
			{
				return this.GetTable<Model>();
			}
		}
		
		public System.Data.Linq.Table<Magazyn> Magazyns
		{
			get
			{
				return this.GetTable<Magazyn>();
			}
		}
		
		public System.Data.Linq.Table<Lokalizacja> Lokalizacjas
		{
			get
			{
				return this.GetTable<Lokalizacja>();
			}
		}
		
		public System.Data.Linq.Table<Kategoria_Czesci> Kategoria_Czescis
		{
			get
			{
				return this.GetTable<Kategoria_Czesci>();
			}
		}
		
		public System.Data.Linq.Table<Firma> Firmas
		{
			get
			{
				return this.GetTable<Firma>();
			}
		}
		
		public System.Data.Linq.Table<Data> Datas
		{
			get
			{
				return this.GetTable<Data>();
			}
		}
		
		public System.Data.Linq.Table<Dostawca> Dostawcas
		{
			get
			{
				return this.GetTable<Dostawca>();
			}
		}
		
		public System.Data.Linq.Table<Czesc_Zamienna> Czesc_Zamiennas
		{
			get
			{
				return this.GetTable<Czesc_Zamienna>();
			}
		}
	}
	
	[Table(Name="dbo.Zamowienie")]
	public partial class Zamowienie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr_Zamowienia;
		
		private System.Nullable<int> _Czas_Realizacji;
		
		private System.Nullable<decimal> _Zysk;
		
		private System.Nullable<decimal> _Wielkosc;
		
		private System.Nullable<decimal> _Koszt_Obslugi;
		
		private System.Nullable<int> _Czas_Dostarczenia_Do_Magazynu;
		
		private System.Nullable<System.DateTime> _Data_Zamowienia;
		
		private System.Nullable<int> _Nr_Magazynu;
		
		private System.Nullable<int> _Nr_Przedstawicielstwa;
		
		private System.Nullable<decimal> _Wartosc_Zamowienia;
		
		private System.Nullable<int> _Nr_Czesci;
		
		private System.Nullable<int> _Nr_Dostawcy;
		
		private EntityRef<Przedstawicielstwo> _Przedstawicielstwo;
		
		private EntityRef<Magazyn> _Magazyn;
		
		private EntityRef<Data> _Data;
		
		private EntityRef<Dostawca> _Dostawca;
		
		private EntityRef<Czesc_Zamienna> _Czesc_Zamienna;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNr_ZamowieniaChanging(int value);
    partial void OnNr_ZamowieniaChanged();
    partial void OnCzas_RealizacjiChanging(System.Nullable<int> value);
    partial void OnCzas_RealizacjiChanged();
    partial void OnZyskChanging(System.Nullable<decimal> value);
    partial void OnZyskChanged();
    partial void OnWielkoscChanging(System.Nullable<decimal> value);
    partial void OnWielkoscChanged();
    partial void OnKoszt_ObslugiChanging(System.Nullable<decimal> value);
    partial void OnKoszt_ObslugiChanged();
    partial void OnCzas_Dostarczenia_Do_MagazynuChanging(System.Nullable<int> value);
    partial void OnCzas_Dostarczenia_Do_MagazynuChanged();
    partial void OnData_ZamowieniaChanging(System.Nullable<System.DateTime> value);
    partial void OnData_ZamowieniaChanged();
    partial void OnNr_MagazynuChanging(System.Nullable<int> value);
    partial void OnNr_MagazynuChanged();
    partial void OnNr_PrzedstawicielstwaChanging(System.Nullable<int> value);
    partial void OnNr_PrzedstawicielstwaChanged();
    partial void OnWartosc_ZamowieniaChanging(System.Nullable<decimal> value);
    partial void OnWartosc_ZamowieniaChanged();
    partial void OnNr_CzesciChanging(System.Nullable<int> value);
    partial void OnNr_CzesciChanged();
    partial void OnNr_DostawcyChanging(System.Nullable<int> value);
    partial void OnNr_DostawcyChanged();
    #endregion
		
		public Zamowienie()
		{
			this._Przedstawicielstwo = default(EntityRef<Przedstawicielstwo>);
			this._Magazyn = default(EntityRef<Magazyn>);
			this._Data = default(EntityRef<Data>);
			this._Dostawca = default(EntityRef<Dostawca>);
			this._Czesc_Zamienna = default(EntityRef<Czesc_Zamienna>);
			OnCreated();
		}
		
		[Column(Storage="_Nr_Zamowienia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nr_Zamowienia
		{
			get
			{
				return this._Nr_Zamowienia;
			}
			set
			{
				if ((this._Nr_Zamowienia != value))
				{
					this.OnNr_ZamowieniaChanging(value);
					this.SendPropertyChanging();
					this._Nr_Zamowienia = value;
					this.SendPropertyChanged("Nr_Zamowienia");
					this.OnNr_ZamowieniaChanged();
				}
			}
		}
		
		[Column(Storage="_Czas_Realizacji", DbType="Int")]
		public System.Nullable<int> Czas_Realizacji
		{
			get
			{
				return this._Czas_Realizacji;
			}
			set
			{
				if ((this._Czas_Realizacji != value))
				{
					this.OnCzas_RealizacjiChanging(value);
					this.SendPropertyChanging();
					this._Czas_Realizacji = value;
					this.SendPropertyChanged("Czas_Realizacji");
					this.OnCzas_RealizacjiChanged();
				}
			}
		}
		
		[Column(Storage="_Zysk", DbType="Money")]
		public System.Nullable<decimal> Zysk
		{
			get
			{
				return this._Zysk;
			}
			set
			{
				if ((this._Zysk != value))
				{
					this.OnZyskChanging(value);
					this.SendPropertyChanging();
					this._Zysk = value;
					this.SendPropertyChanged("Zysk");
					this.OnZyskChanged();
				}
			}
		}
		
		[Column(Storage="_Wielkosc", DbType="Money")]
		public System.Nullable<decimal> Wielkosc
		{
			get
			{
				return this._Wielkosc;
			}
			set
			{
				if ((this._Wielkosc != value))
				{
					this.OnWielkoscChanging(value);
					this.SendPropertyChanging();
					this._Wielkosc = value;
					this.SendPropertyChanged("Wielkosc");
					this.OnWielkoscChanged();
				}
			}
		}
		
		[Column(Storage="_Koszt_Obslugi", DbType="Money")]
		public System.Nullable<decimal> Koszt_Obslugi
		{
			get
			{
				return this._Koszt_Obslugi;
			}
			set
			{
				if ((this._Koszt_Obslugi != value))
				{
					this.OnKoszt_ObslugiChanging(value);
					this.SendPropertyChanging();
					this._Koszt_Obslugi = value;
					this.SendPropertyChanged("Koszt_Obslugi");
					this.OnKoszt_ObslugiChanged();
				}
			}
		}
		
		[Column(Storage="_Czas_Dostarczenia_Do_Magazynu", DbType="Int")]
		public System.Nullable<int> Czas_Dostarczenia_Do_Magazynu
		{
			get
			{
				return this._Czas_Dostarczenia_Do_Magazynu;
			}
			set
			{
				if ((this._Czas_Dostarczenia_Do_Magazynu != value))
				{
					this.OnCzas_Dostarczenia_Do_MagazynuChanging(value);
					this.SendPropertyChanging();
					this._Czas_Dostarczenia_Do_Magazynu = value;
					this.SendPropertyChanged("Czas_Dostarczenia_Do_Magazynu");
					this.OnCzas_Dostarczenia_Do_MagazynuChanged();
				}
			}
		}
		
		[Column(Storage="_Data_Zamowienia", DbType="Date")]
		public System.Nullable<System.DateTime> Data_Zamowienia
		{
			get
			{
				return this._Data_Zamowienia;
			}
			set
			{
				if ((this._Data_Zamowienia != value))
				{
					if (this._Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnData_ZamowieniaChanging(value);
					this.SendPropertyChanging();
					this._Data_Zamowienia = value;
					this.SendPropertyChanged("Data_Zamowienia");
					this.OnData_ZamowieniaChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Magazynu", DbType="Int")]
		public System.Nullable<int> Nr_Magazynu
		{
			get
			{
				return this._Nr_Magazynu;
			}
			set
			{
				if ((this._Nr_Magazynu != value))
				{
					if (this._Magazyn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_MagazynuChanging(value);
					this.SendPropertyChanging();
					this._Nr_Magazynu = value;
					this.SendPropertyChanged("Nr_Magazynu");
					this.OnNr_MagazynuChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Przedstawicielstwa", DbType="Int")]
		public System.Nullable<int> Nr_Przedstawicielstwa
		{
			get
			{
				return this._Nr_Przedstawicielstwa;
			}
			set
			{
				if ((this._Nr_Przedstawicielstwa != value))
				{
					if (this._Przedstawicielstwo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_PrzedstawicielstwaChanging(value);
					this.SendPropertyChanging();
					this._Nr_Przedstawicielstwa = value;
					this.SendPropertyChanged("Nr_Przedstawicielstwa");
					this.OnNr_PrzedstawicielstwaChanged();
				}
			}
		}
		
		[Column(Storage="_Wartosc_Zamowienia", DbType="Money")]
		public System.Nullable<decimal> Wartosc_Zamowienia
		{
			get
			{
				return this._Wartosc_Zamowienia;
			}
			set
			{
				if ((this._Wartosc_Zamowienia != value))
				{
					this.OnWartosc_ZamowieniaChanging(value);
					this.SendPropertyChanging();
					this._Wartosc_Zamowienia = value;
					this.SendPropertyChanged("Wartosc_Zamowienia");
					this.OnWartosc_ZamowieniaChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Czesci", DbType="Int")]
		public System.Nullable<int> Nr_Czesci
		{
			get
			{
				return this._Nr_Czesci;
			}
			set
			{
				if ((this._Nr_Czesci != value))
				{
					if (this._Czesc_Zamienna.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_CzesciChanging(value);
					this.SendPropertyChanging();
					this._Nr_Czesci = value;
					this.SendPropertyChanged("Nr_Czesci");
					this.OnNr_CzesciChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Dostawcy", DbType="Int")]
		public System.Nullable<int> Nr_Dostawcy
		{
			get
			{
				return this._Nr_Dostawcy;
			}
			set
			{
				if ((this._Nr_Dostawcy != value))
				{
					if (this._Dostawca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_DostawcyChanging(value);
					this.SendPropertyChanging();
					this._Nr_Dostawcy = value;
					this.SendPropertyChanged("Nr_Dostawcy");
					this.OnNr_DostawcyChanged();
				}
			}
		}
		
		[Association(Name="Przedstawicielstwo_Zamowienie", Storage="_Przedstawicielstwo", ThisKey="Nr_Przedstawicielstwa", OtherKey="Nr_Przedstawicielstwa", IsForeignKey=true)]
		public Przedstawicielstwo Przedstawicielstwo
		{
			get
			{
				return this._Przedstawicielstwo.Entity;
			}
			set
			{
				Przedstawicielstwo previousValue = this._Przedstawicielstwo.Entity;
				if (((previousValue != value) 
							|| (this._Przedstawicielstwo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Przedstawicielstwo.Entity = null;
						previousValue.Zamowienies.Remove(this);
					}
					this._Przedstawicielstwo.Entity = value;
					if ((value != null))
					{
						value.Zamowienies.Add(this);
						this._Nr_Przedstawicielstwa = value.Nr_Przedstawicielstwa;
					}
					else
					{
						this._Nr_Przedstawicielstwa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Przedstawicielstwo");
				}
			}
		}
		
		[Association(Name="Magazyn_Zamowienie", Storage="_Magazyn", ThisKey="Nr_Magazynu", OtherKey="Nr_Magazynu", IsForeignKey=true)]
		public Magazyn Magazyn
		{
			get
			{
				return this._Magazyn.Entity;
			}
			set
			{
				Magazyn previousValue = this._Magazyn.Entity;
				if (((previousValue != value) 
							|| (this._Magazyn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Magazyn.Entity = null;
						previousValue.Zamowienies.Remove(this);
					}
					this._Magazyn.Entity = value;
					if ((value != null))
					{
						value.Zamowienies.Add(this);
						this._Nr_Magazynu = value.Nr_Magazynu;
					}
					else
					{
						this._Nr_Magazynu = default(Nullable<int>);
					}
					this.SendPropertyChanged("Magazyn");
				}
			}
		}
		
		[Association(Name="Data_Zamowienie", Storage="_Data", ThisKey="Data_Zamowienia", OtherKey="PK_Date", IsForeignKey=true)]
		public Data Data
		{
			get
			{
				return this._Data.Entity;
			}
			set
			{
				Data previousValue = this._Data.Entity;
				if (((previousValue != value) 
							|| (this._Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Data.Entity = null;
						previousValue.Zamowienies.Remove(this);
					}
					this._Data.Entity = value;
					if ((value != null))
					{
						value.Zamowienies.Add(this);
						this._Data_Zamowienia = value.PK_Date;
					}
					else
					{
						this._Data_Zamowienia = default(Nullable<System.DateTime>);
					}
					this.SendPropertyChanged("Data");
				}
			}
		}
		
		[Association(Name="Dostawca_Zamowienie", Storage="_Dostawca", ThisKey="Nr_Dostawcy", OtherKey="Nr_Dostawcy", IsForeignKey=true)]
		public Dostawca Dostawca
		{
			get
			{
				return this._Dostawca.Entity;
			}
			set
			{
				Dostawca previousValue = this._Dostawca.Entity;
				if (((previousValue != value) 
							|| (this._Dostawca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dostawca.Entity = null;
						previousValue.Zamowienies.Remove(this);
					}
					this._Dostawca.Entity = value;
					if ((value != null))
					{
						value.Zamowienies.Add(this);
						this._Nr_Dostawcy = value.Nr_Dostawcy;
					}
					else
					{
						this._Nr_Dostawcy = default(Nullable<int>);
					}
					this.SendPropertyChanged("Dostawca");
				}
			}
		}
		
		[Association(Name="Czesc_Zamienna_Zamowienie", Storage="_Czesc_Zamienna", ThisKey="Nr_Czesci", OtherKey="Nr_Czesci", IsForeignKey=true)]
		public Czesc_Zamienna Czesc_Zamienna
		{
			get
			{
				return this._Czesc_Zamienna.Entity;
			}
			set
			{
				Czesc_Zamienna previousValue = this._Czesc_Zamienna.Entity;
				if (((previousValue != value) 
							|| (this._Czesc_Zamienna.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Czesc_Zamienna.Entity = null;
						previousValue.Zamowienies.Remove(this);
					}
					this._Czesc_Zamienna.Entity = value;
					if ((value != null))
					{
						value.Zamowienies.Add(this);
						this._Nr_Czesci = value.Nr_Czesci;
					}
					else
					{
						this._Nr_Czesci = default(Nullable<int>);
					}
					this.SendPropertyChanged("Czesc_Zamienna");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Sprzedaz")]
	public partial class Sprzedaz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr_Sprzedazy;
		
		private int _Nr_Firmy;
		
		private System.Nullable<int> _Nr_Kategorii;
		
		private System.Nullable<decimal> _Wielkosc_sprzedazy;
		
		private System.Nullable<System.DateTime> _Data_Sprzedazy;
		
		private EntityRef<Kategoria_Czesci> _Kategoria_Czesci;
		
		private EntityRef<Firma> _Firma;
		
		private EntityRef<Data> _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNr_SprzedazyChanging(int value);
    partial void OnNr_SprzedazyChanged();
    partial void OnNr_FirmyChanging(int value);
    partial void OnNr_FirmyChanged();
    partial void OnNr_KategoriiChanging(System.Nullable<int> value);
    partial void OnNr_KategoriiChanged();
    partial void OnWielkosc_sprzedazyChanging(System.Nullable<decimal> value);
    partial void OnWielkosc_sprzedazyChanged();
    partial void OnData_SprzedazyChanging(System.Nullable<System.DateTime> value);
    partial void OnData_SprzedazyChanged();
    #endregion
		
		public Sprzedaz()
		{
			this._Kategoria_Czesci = default(EntityRef<Kategoria_Czesci>);
			this._Firma = default(EntityRef<Firma>);
			this._Data = default(EntityRef<Data>);
			OnCreated();
		}
		
		[Column(Storage="_Nr_Sprzedazy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nr_Sprzedazy
		{
			get
			{
				return this._Nr_Sprzedazy;
			}
			set
			{
				if ((this._Nr_Sprzedazy != value))
				{
					this.OnNr_SprzedazyChanging(value);
					this.SendPropertyChanging();
					this._Nr_Sprzedazy = value;
					this.SendPropertyChanged("Nr_Sprzedazy");
					this.OnNr_SprzedazyChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Firmy", DbType="Int NOT NULL")]
		public int Nr_Firmy
		{
			get
			{
				return this._Nr_Firmy;
			}
			set
			{
				if ((this._Nr_Firmy != value))
				{
					if (this._Firma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_FirmyChanging(value);
					this.SendPropertyChanging();
					this._Nr_Firmy = value;
					this.SendPropertyChanged("Nr_Firmy");
					this.OnNr_FirmyChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Kategorii", DbType="Int")]
		public System.Nullable<int> Nr_Kategorii
		{
			get
			{
				return this._Nr_Kategorii;
			}
			set
			{
				if ((this._Nr_Kategorii != value))
				{
					if (this._Kategoria_Czesci.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_KategoriiChanging(value);
					this.SendPropertyChanging();
					this._Nr_Kategorii = value;
					this.SendPropertyChanged("Nr_Kategorii");
					this.OnNr_KategoriiChanged();
				}
			}
		}
		
		[Column(Storage="_Wielkosc_sprzedazy", DbType="Money")]
		public System.Nullable<decimal> Wielkosc_sprzedazy
		{
			get
			{
				return this._Wielkosc_sprzedazy;
			}
			set
			{
				if ((this._Wielkosc_sprzedazy != value))
				{
					this.OnWielkosc_sprzedazyChanging(value);
					this.SendPropertyChanging();
					this._Wielkosc_sprzedazy = value;
					this.SendPropertyChanged("Wielkosc_sprzedazy");
					this.OnWielkosc_sprzedazyChanged();
				}
			}
		}
		
		[Column(Storage="_Data_Sprzedazy", DbType="Date")]
		public System.Nullable<System.DateTime> Data_Sprzedazy
		{
			get
			{
				return this._Data_Sprzedazy;
			}
			set
			{
				if ((this._Data_Sprzedazy != value))
				{
					if (this._Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnData_SprzedazyChanging(value);
					this.SendPropertyChanging();
					this._Data_Sprzedazy = value;
					this.SendPropertyChanged("Data_Sprzedazy");
					this.OnData_SprzedazyChanged();
				}
			}
		}
		
		[Association(Name="Kategoria_Czesci_Sprzedaz", Storage="_Kategoria_Czesci", ThisKey="Nr_Kategorii", OtherKey="Nr_Kategorii", IsForeignKey=true)]
		public Kategoria_Czesci Kategoria_Czesci
		{
			get
			{
				return this._Kategoria_Czesci.Entity;
			}
			set
			{
				Kategoria_Czesci previousValue = this._Kategoria_Czesci.Entity;
				if (((previousValue != value) 
							|| (this._Kategoria_Czesci.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategoria_Czesci.Entity = null;
						previousValue.Sprzedazs.Remove(this);
					}
					this._Kategoria_Czesci.Entity = value;
					if ((value != null))
					{
						value.Sprzedazs.Add(this);
						this._Nr_Kategorii = value.Nr_Kategorii;
					}
					else
					{
						this._Nr_Kategorii = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kategoria_Czesci");
				}
			}
		}
		
		[Association(Name="Firma_Sprzedaz", Storage="_Firma", ThisKey="Nr_Firmy", OtherKey="Nr_Firmy", IsForeignKey=true)]
		public Firma Firma
		{
			get
			{
				return this._Firma.Entity;
			}
			set
			{
				Firma previousValue = this._Firma.Entity;
				if (((previousValue != value) 
							|| (this._Firma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Firma.Entity = null;
						previousValue.Sprzedazs.Remove(this);
					}
					this._Firma.Entity = value;
					if ((value != null))
					{
						value.Sprzedazs.Add(this);
						this._Nr_Firmy = value.Nr_Firmy;
					}
					else
					{
						this._Nr_Firmy = default(int);
					}
					this.SendPropertyChanged("Firma");
				}
			}
		}
		
		[Association(Name="Data_Sprzedaz", Storage="_Data", ThisKey="Data_Sprzedazy", OtherKey="PK_Date", IsForeignKey=true)]
		public Data Data
		{
			get
			{
				return this._Data.Entity;
			}
			set
			{
				Data previousValue = this._Data.Entity;
				if (((previousValue != value) 
							|| (this._Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Data.Entity = null;
						previousValue.Sprzedazs.Remove(this);
					}
					this._Data.Entity = value;
					if ((value != null))
					{
						value.Sprzedazs.Add(this);
						this._Data_Sprzedazy = value.PK_Date;
					}
					else
					{
						this._Data_Sprzedazy = default(Nullable<System.DateTime>);
					}
					this.SendPropertyChanged("Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Reklamacja")]
	public partial class Reklamacja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr_Reklamacji;
		
		private int _Nr_Czesci;
		
		private System.DateTime _Data;
		
		private decimal _Koszt_Obslugi_Reklamacji;
		
		private int _Czas_Obslugi_Reklamacji;
		
		private int _Liczba_Reklamacji;
		
		private int _Nr_Przedstawicielstwa;
		
		private EntityRef<Przedstawicielstwo> _Przedstawicielstwo;
		
		private EntityRef<Data> _Data1;
		
		private EntityRef<Czesc_Zamienna> _Czesc_Zamienna;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNr_ReklamacjiChanging(int value);
    partial void OnNr_ReklamacjiChanged();
    partial void OnNr_CzesciChanging(int value);
    partial void OnNr_CzesciChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnKoszt_Obslugi_ReklamacjiChanging(decimal value);
    partial void OnKoszt_Obslugi_ReklamacjiChanged();
    partial void OnCzas_Obslugi_ReklamacjiChanging(int value);
    partial void OnCzas_Obslugi_ReklamacjiChanged();
    partial void OnLiczba_ReklamacjiChanging(int value);
    partial void OnLiczba_ReklamacjiChanged();
    partial void OnNr_PrzedstawicielstwaChanging(int value);
    partial void OnNr_PrzedstawicielstwaChanged();
    #endregion
		
		public Reklamacja()
		{
			this._Przedstawicielstwo = default(EntityRef<Przedstawicielstwo>);
			this._Data1 = default(EntityRef<Data>);
			this._Czesc_Zamienna = default(EntityRef<Czesc_Zamienna>);
			OnCreated();
		}
		
		[Column(Storage="_Nr_Reklamacji", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nr_Reklamacji
		{
			get
			{
				return this._Nr_Reklamacji;
			}
			set
			{
				if ((this._Nr_Reklamacji != value))
				{
					this.OnNr_ReklamacjiChanging(value);
					this.SendPropertyChanging();
					this._Nr_Reklamacji = value;
					this.SendPropertyChanged("Nr_Reklamacji");
					this.OnNr_ReklamacjiChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Czesci", DbType="Int NOT NULL")]
		public int Nr_Czesci
		{
			get
			{
				return this._Nr_Czesci;
			}
			set
			{
				if ((this._Nr_Czesci != value))
				{
					if (this._Czesc_Zamienna.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_CzesciChanging(value);
					this.SendPropertyChanging();
					this._Nr_Czesci = value;
					this.SendPropertyChanged("Nr_Czesci");
					this.OnNr_CzesciChanged();
				}
			}
		}
		
		[Column(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					if (this._Data1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[Column(Storage="_Koszt_Obslugi_Reklamacji", DbType="Money NOT NULL")]
		public decimal Koszt_Obslugi_Reklamacji
		{
			get
			{
				return this._Koszt_Obslugi_Reklamacji;
			}
			set
			{
				if ((this._Koszt_Obslugi_Reklamacji != value))
				{
					this.OnKoszt_Obslugi_ReklamacjiChanging(value);
					this.SendPropertyChanging();
					this._Koszt_Obslugi_Reklamacji = value;
					this.SendPropertyChanged("Koszt_Obslugi_Reklamacji");
					this.OnKoszt_Obslugi_ReklamacjiChanged();
				}
			}
		}
		
		[Column(Storage="_Czas_Obslugi_Reklamacji", DbType="Int NOT NULL")]
		public int Czas_Obslugi_Reklamacji
		{
			get
			{
				return this._Czas_Obslugi_Reklamacji;
			}
			set
			{
				if ((this._Czas_Obslugi_Reklamacji != value))
				{
					this.OnCzas_Obslugi_ReklamacjiChanging(value);
					this.SendPropertyChanging();
					this._Czas_Obslugi_Reklamacji = value;
					this.SendPropertyChanged("Czas_Obslugi_Reklamacji");
					this.OnCzas_Obslugi_ReklamacjiChanged();
				}
			}
		}
		
		[Column(Storage="_Liczba_Reklamacji", DbType="Int NOT NULL")]
		public int Liczba_Reklamacji
		{
			get
			{
				return this._Liczba_Reklamacji;
			}
			set
			{
				if ((this._Liczba_Reklamacji != value))
				{
					this.OnLiczba_ReklamacjiChanging(value);
					this.SendPropertyChanging();
					this._Liczba_Reklamacji = value;
					this.SendPropertyChanged("Liczba_Reklamacji");
					this.OnLiczba_ReklamacjiChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Przedstawicielstwa", DbType="Int NOT NULL")]
		public int Nr_Przedstawicielstwa
		{
			get
			{
				return this._Nr_Przedstawicielstwa;
			}
			set
			{
				if ((this._Nr_Przedstawicielstwa != value))
				{
					if (this._Przedstawicielstwo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_PrzedstawicielstwaChanging(value);
					this.SendPropertyChanging();
					this._Nr_Przedstawicielstwa = value;
					this.SendPropertyChanged("Nr_Przedstawicielstwa");
					this.OnNr_PrzedstawicielstwaChanged();
				}
			}
		}
		
		[Association(Name="Przedstawicielstwo_Reklamacja", Storage="_Przedstawicielstwo", ThisKey="Nr_Przedstawicielstwa", OtherKey="Nr_Przedstawicielstwa", IsForeignKey=true)]
		public Przedstawicielstwo Przedstawicielstwo
		{
			get
			{
				return this._Przedstawicielstwo.Entity;
			}
			set
			{
				Przedstawicielstwo previousValue = this._Przedstawicielstwo.Entity;
				if (((previousValue != value) 
							|| (this._Przedstawicielstwo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Przedstawicielstwo.Entity = null;
						previousValue.Reklamacjas.Remove(this);
					}
					this._Przedstawicielstwo.Entity = value;
					if ((value != null))
					{
						value.Reklamacjas.Add(this);
						this._Nr_Przedstawicielstwa = value.Nr_Przedstawicielstwa;
					}
					else
					{
						this._Nr_Przedstawicielstwa = default(int);
					}
					this.SendPropertyChanged("Przedstawicielstwo");
				}
			}
		}
		
		[Association(Name="Data_Reklamacja", Storage="_Data1", ThisKey="Data", OtherKey="PK_Date", IsForeignKey=true)]
		public Data Data1
		{
			get
			{
				return this._Data1.Entity;
			}
			set
			{
				Data previousValue = this._Data1.Entity;
				if (((previousValue != value) 
							|| (this._Data1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Data1.Entity = null;
						previousValue.Reklamacjas.Remove(this);
					}
					this._Data1.Entity = value;
					if ((value != null))
					{
						value.Reklamacjas.Add(this);
						this._Data = value.PK_Date;
					}
					else
					{
						this._Data = default(System.DateTime);
					}
					this.SendPropertyChanged("Data1");
				}
			}
		}
		
		[Association(Name="Czesc_Zamienna_Reklamacja", Storage="_Czesc_Zamienna", ThisKey="Nr_Czesci", OtherKey="Nr_Czesci", IsForeignKey=true)]
		public Czesc_Zamienna Czesc_Zamienna
		{
			get
			{
				return this._Czesc_Zamienna.Entity;
			}
			set
			{
				Czesc_Zamienna previousValue = this._Czesc_Zamienna.Entity;
				if (((previousValue != value) 
							|| (this._Czesc_Zamienna.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Czesc_Zamienna.Entity = null;
						previousValue.Reklamacjas.Remove(this);
					}
					this._Czesc_Zamienna.Entity = value;
					if ((value != null))
					{
						value.Reklamacjas.Add(this);
						this._Nr_Czesci = value.Nr_Czesci;
					}
					else
					{
						this._Nr_Czesci = default(int);
					}
					this.SendPropertyChanged("Czesc_Zamienna");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Przedstawicielstwo")]
	public partial class Przedstawicielstwo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr_Przedstawicielstwa;
		
		private string _Nazwa;
		
		private System.Nullable<int> _Nr_Lokalizacji;
		
		private EntitySet<Zamowienie> _Zamowienies;
		
		private EntitySet<Reklamacja> _Reklamacjas;
		
		private EntityRef<Lokalizacja> _Lokalizacja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNr_PrzedstawicielstwaChanging(int value);
    partial void OnNr_PrzedstawicielstwaChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnNr_LokalizacjiChanging(System.Nullable<int> value);
    partial void OnNr_LokalizacjiChanged();
    #endregion
		
		public Przedstawicielstwo()
		{
			this._Zamowienies = new EntitySet<Zamowienie>(new Action<Zamowienie>(this.attach_Zamowienies), new Action<Zamowienie>(this.detach_Zamowienies));
			this._Reklamacjas = new EntitySet<Reklamacja>(new Action<Reklamacja>(this.attach_Reklamacjas), new Action<Reklamacja>(this.detach_Reklamacjas));
			this._Lokalizacja = default(EntityRef<Lokalizacja>);
			OnCreated();
		}
		
		[Column(Storage="_Nr_Przedstawicielstwa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nr_Przedstawicielstwa
		{
			get
			{
				return this._Nr_Przedstawicielstwa;
			}
			set
			{
				if ((this._Nr_Przedstawicielstwa != value))
				{
					this.OnNr_PrzedstawicielstwaChanging(value);
					this.SendPropertyChanging();
					this._Nr_Przedstawicielstwa = value;
					this.SendPropertyChanged("Nr_Przedstawicielstwa");
					this.OnNr_PrzedstawicielstwaChanged();
				}
			}
		}
		
		[Column(Storage="_Nazwa", DbType="NVarChar(50)")]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Lokalizacji", DbType="Int")]
		public System.Nullable<int> Nr_Lokalizacji
		{
			get
			{
				return this._Nr_Lokalizacji;
			}
			set
			{
				if ((this._Nr_Lokalizacji != value))
				{
					if (this._Lokalizacja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_LokalizacjiChanging(value);
					this.SendPropertyChanging();
					this._Nr_Lokalizacji = value;
					this.SendPropertyChanged("Nr_Lokalizacji");
					this.OnNr_LokalizacjiChanged();
				}
			}
		}
		
		[Association(Name="Przedstawicielstwo_Zamowienie", Storage="_Zamowienies", ThisKey="Nr_Przedstawicielstwa", OtherKey="Nr_Przedstawicielstwa")]
		public EntitySet<Zamowienie> Zamowienies
		{
			get
			{
				return this._Zamowienies;
			}
			set
			{
				this._Zamowienies.Assign(value);
			}
		}
		
		[Association(Name="Przedstawicielstwo_Reklamacja", Storage="_Reklamacjas", ThisKey="Nr_Przedstawicielstwa", OtherKey="Nr_Przedstawicielstwa")]
		public EntitySet<Reklamacja> Reklamacjas
		{
			get
			{
				return this._Reklamacjas;
			}
			set
			{
				this._Reklamacjas.Assign(value);
			}
		}
		
		[Association(Name="Lokalizacja_Przedstawicielstwo", Storage="_Lokalizacja", ThisKey="Nr_Lokalizacji", OtherKey="Nr_Lokalizacji", IsForeignKey=true)]
		public Lokalizacja Lokalizacja
		{
			get
			{
				return this._Lokalizacja.Entity;
			}
			set
			{
				Lokalizacja previousValue = this._Lokalizacja.Entity;
				if (((previousValue != value) 
							|| (this._Lokalizacja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lokalizacja.Entity = null;
						previousValue.Przedstawicielstwos.Remove(this);
					}
					this._Lokalizacja.Entity = value;
					if ((value != null))
					{
						value.Przedstawicielstwos.Add(this);
						this._Nr_Lokalizacji = value.Nr_Lokalizacji;
					}
					else
					{
						this._Nr_Lokalizacji = default(Nullable<int>);
					}
					this.SendPropertyChanged("Lokalizacja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zamowienies(Zamowienie entity)
		{
			this.SendPropertyChanging();
			entity.Przedstawicielstwo = this;
		}
		
		private void detach_Zamowienies(Zamowienie entity)
		{
			this.SendPropertyChanging();
			entity.Przedstawicielstwo = null;
		}
		
		private void attach_Reklamacjas(Reklamacja entity)
		{
			this.SendPropertyChanging();
			entity.Przedstawicielstwo = this;
		}
		
		private void detach_Reklamacjas(Reklamacja entity)
		{
			this.SendPropertyChanging();
			entity.Przedstawicielstwo = null;
		}
	}
	
	[Table(Name="dbo.Model")]
	public partial class Model : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr_Modelu;
		
		private string _Nazwa_Modelu;
		
		private string _Typ_Silnika;
		
		private int _Rok;
		
		private EntitySet<Czesc_Zamienna> _Czesc_Zamiennas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNr_ModeluChanging(int value);
    partial void OnNr_ModeluChanged();
    partial void OnNazwa_ModeluChanging(string value);
    partial void OnNazwa_ModeluChanged();
    partial void OnTyp_SilnikaChanging(string value);
    partial void OnTyp_SilnikaChanged();
    partial void OnRokChanging(int value);
    partial void OnRokChanged();
    #endregion
		
		public Model()
		{
			this._Czesc_Zamiennas = new EntitySet<Czesc_Zamienna>(new Action<Czesc_Zamienna>(this.attach_Czesc_Zamiennas), new Action<Czesc_Zamienna>(this.detach_Czesc_Zamiennas));
			OnCreated();
		}
		
		[Column(Storage="_Nr_Modelu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nr_Modelu
		{
			get
			{
				return this._Nr_Modelu;
			}
			set
			{
				if ((this._Nr_Modelu != value))
				{
					this.OnNr_ModeluChanging(value);
					this.SendPropertyChanging();
					this._Nr_Modelu = value;
					this.SendPropertyChanged("Nr_Modelu");
					this.OnNr_ModeluChanged();
				}
			}
		}
		
		[Column(Storage="_Nazwa_Modelu", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Nazwa_Modelu
		{
			get
			{
				return this._Nazwa_Modelu;
			}
			set
			{
				if ((this._Nazwa_Modelu != value))
				{
					this.OnNazwa_ModeluChanging(value);
					this.SendPropertyChanging();
					this._Nazwa_Modelu = value;
					this.SendPropertyChanged("Nazwa_Modelu");
					this.OnNazwa_ModeluChanged();
				}
			}
		}
		
		[Column(Storage="_Typ_Silnika", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Typ_Silnika
		{
			get
			{
				return this._Typ_Silnika;
			}
			set
			{
				if ((this._Typ_Silnika != value))
				{
					this.OnTyp_SilnikaChanging(value);
					this.SendPropertyChanging();
					this._Typ_Silnika = value;
					this.SendPropertyChanged("Typ_Silnika");
					this.OnTyp_SilnikaChanged();
				}
			}
		}
		
		[Column(Storage="_Rok", DbType="Int NOT NULL")]
		public int Rok
		{
			get
			{
				return this._Rok;
			}
			set
			{
				if ((this._Rok != value))
				{
					this.OnRokChanging(value);
					this.SendPropertyChanging();
					this._Rok = value;
					this.SendPropertyChanged("Rok");
					this.OnRokChanged();
				}
			}
		}
		
		[Association(Name="Model_Czesc_Zamienna", Storage="_Czesc_Zamiennas", ThisKey="Nr_Modelu", OtherKey="Nr_Modelu")]
		public EntitySet<Czesc_Zamienna> Czesc_Zamiennas
		{
			get
			{
				return this._Czesc_Zamiennas;
			}
			set
			{
				this._Czesc_Zamiennas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Czesc_Zamiennas(Czesc_Zamienna entity)
		{
			this.SendPropertyChanging();
			entity.Model = this;
		}
		
		private void detach_Czesc_Zamiennas(Czesc_Zamienna entity)
		{
			this.SendPropertyChanging();
			entity.Model = null;
		}
	}
	
	[Table(Name="dbo.Magazyn")]
	public partial class Magazyn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr_Magazynu;
		
		private string _Nazwa;
		
		private System.Nullable<int> _Nr_Lokalizacji;
		
		private EntitySet<Zamowienie> _Zamowienies;
		
		private EntityRef<Lokalizacja> _Lokalizacja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNr_MagazynuChanging(int value);
    partial void OnNr_MagazynuChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnNr_LokalizacjiChanging(System.Nullable<int> value);
    partial void OnNr_LokalizacjiChanged();
    #endregion
		
		public Magazyn()
		{
			this._Zamowienies = new EntitySet<Zamowienie>(new Action<Zamowienie>(this.attach_Zamowienies), new Action<Zamowienie>(this.detach_Zamowienies));
			this._Lokalizacja = default(EntityRef<Lokalizacja>);
			OnCreated();
		}
		
		[Column(Storage="_Nr_Magazynu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nr_Magazynu
		{
			get
			{
				return this._Nr_Magazynu;
			}
			set
			{
				if ((this._Nr_Magazynu != value))
				{
					this.OnNr_MagazynuChanging(value);
					this.SendPropertyChanging();
					this._Nr_Magazynu = value;
					this.SendPropertyChanged("Nr_Magazynu");
					this.OnNr_MagazynuChanged();
				}
			}
		}
		
		[Column(Storage="_Nazwa", DbType="NVarChar(50)")]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Lokalizacji", DbType="Int")]
		public System.Nullable<int> Nr_Lokalizacji
		{
			get
			{
				return this._Nr_Lokalizacji;
			}
			set
			{
				if ((this._Nr_Lokalizacji != value))
				{
					if (this._Lokalizacja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_LokalizacjiChanging(value);
					this.SendPropertyChanging();
					this._Nr_Lokalizacji = value;
					this.SendPropertyChanged("Nr_Lokalizacji");
					this.OnNr_LokalizacjiChanged();
				}
			}
		}
		
		[Association(Name="Magazyn_Zamowienie", Storage="_Zamowienies", ThisKey="Nr_Magazynu", OtherKey="Nr_Magazynu")]
		public EntitySet<Zamowienie> Zamowienies
		{
			get
			{
				return this._Zamowienies;
			}
			set
			{
				this._Zamowienies.Assign(value);
			}
		}
		
		[Association(Name="Lokalizacja_Magazyn", Storage="_Lokalizacja", ThisKey="Nr_Lokalizacji", OtherKey="Nr_Lokalizacji", IsForeignKey=true)]
		public Lokalizacja Lokalizacja
		{
			get
			{
				return this._Lokalizacja.Entity;
			}
			set
			{
				Lokalizacja previousValue = this._Lokalizacja.Entity;
				if (((previousValue != value) 
							|| (this._Lokalizacja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lokalizacja.Entity = null;
						previousValue.Magazyns.Remove(this);
					}
					this._Lokalizacja.Entity = value;
					if ((value != null))
					{
						value.Magazyns.Add(this);
						this._Nr_Lokalizacji = value.Nr_Lokalizacji;
					}
					else
					{
						this._Nr_Lokalizacji = default(Nullable<int>);
					}
					this.SendPropertyChanged("Lokalizacja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zamowienies(Zamowienie entity)
		{
			this.SendPropertyChanging();
			entity.Magazyn = this;
		}
		
		private void detach_Zamowienies(Zamowienie entity)
		{
			this.SendPropertyChanging();
			entity.Magazyn = null;
		}
	}
	
	[Table(Name="dbo.Lokalizacja")]
	public partial class Lokalizacja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr_Lokalizacji;
		
		private string _Miasto;
		
		private string _Kraj;
		
		private EntitySet<Przedstawicielstwo> _Przedstawicielstwos;
		
		private EntitySet<Magazyn> _Magazyns;
		
		private EntitySet<Firma> _Firmas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNr_LokalizacjiChanging(int value);
    partial void OnNr_LokalizacjiChanged();
    partial void OnMiastoChanging(string value);
    partial void OnMiastoChanged();
    partial void OnKrajChanging(string value);
    partial void OnKrajChanged();
    #endregion
		
		public Lokalizacja()
		{
			this._Przedstawicielstwos = new EntitySet<Przedstawicielstwo>(new Action<Przedstawicielstwo>(this.attach_Przedstawicielstwos), new Action<Przedstawicielstwo>(this.detach_Przedstawicielstwos));
			this._Magazyns = new EntitySet<Magazyn>(new Action<Magazyn>(this.attach_Magazyns), new Action<Magazyn>(this.detach_Magazyns));
			this._Firmas = new EntitySet<Firma>(new Action<Firma>(this.attach_Firmas), new Action<Firma>(this.detach_Firmas));
			OnCreated();
		}
		
		[Column(Storage="_Nr_Lokalizacji", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nr_Lokalizacji
		{
			get
			{
				return this._Nr_Lokalizacji;
			}
			set
			{
				if ((this._Nr_Lokalizacji != value))
				{
					this.OnNr_LokalizacjiChanging(value);
					this.SendPropertyChanging();
					this._Nr_Lokalizacji = value;
					this.SendPropertyChanged("Nr_Lokalizacji");
					this.OnNr_LokalizacjiChanged();
				}
			}
		}
		
		[Column(Storage="_Miasto", DbType="NVarChar(100)")]
		public string Miasto
		{
			get
			{
				return this._Miasto;
			}
			set
			{
				if ((this._Miasto != value))
				{
					this.OnMiastoChanging(value);
					this.SendPropertyChanging();
					this._Miasto = value;
					this.SendPropertyChanged("Miasto");
					this.OnMiastoChanged();
				}
			}
		}
		
		[Column(Storage="_Kraj", DbType="NVarChar(100)")]
		public string Kraj
		{
			get
			{
				return this._Kraj;
			}
			set
			{
				if ((this._Kraj != value))
				{
					this.OnKrajChanging(value);
					this.SendPropertyChanging();
					this._Kraj = value;
					this.SendPropertyChanged("Kraj");
					this.OnKrajChanged();
				}
			}
		}
		
		[Association(Name="Lokalizacja_Przedstawicielstwo", Storage="_Przedstawicielstwos", ThisKey="Nr_Lokalizacji", OtherKey="Nr_Lokalizacji")]
		public EntitySet<Przedstawicielstwo> Przedstawicielstwos
		{
			get
			{
				return this._Przedstawicielstwos;
			}
			set
			{
				this._Przedstawicielstwos.Assign(value);
			}
		}
		
		[Association(Name="Lokalizacja_Magazyn", Storage="_Magazyns", ThisKey="Nr_Lokalizacji", OtherKey="Nr_Lokalizacji")]
		public EntitySet<Magazyn> Magazyns
		{
			get
			{
				return this._Magazyns;
			}
			set
			{
				this._Magazyns.Assign(value);
			}
		}
		
		[Association(Name="Lokalizacja_Firma", Storage="_Firmas", ThisKey="Nr_Lokalizacji", OtherKey="Nr_Lokalizacji")]
		public EntitySet<Firma> Firmas
		{
			get
			{
				return this._Firmas;
			}
			set
			{
				this._Firmas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Przedstawicielstwos(Przedstawicielstwo entity)
		{
			this.SendPropertyChanging();
			entity.Lokalizacja = this;
		}
		
		private void detach_Przedstawicielstwos(Przedstawicielstwo entity)
		{
			this.SendPropertyChanging();
			entity.Lokalizacja = null;
		}
		
		private void attach_Magazyns(Magazyn entity)
		{
			this.SendPropertyChanging();
			entity.Lokalizacja = this;
		}
		
		private void detach_Magazyns(Magazyn entity)
		{
			this.SendPropertyChanging();
			entity.Lokalizacja = null;
		}
		
		private void attach_Firmas(Firma entity)
		{
			this.SendPropertyChanging();
			entity.Lokalizacja = this;
		}
		
		private void detach_Firmas(Firma entity)
		{
			this.SendPropertyChanging();
			entity.Lokalizacja = null;
		}
	}
	
	[Table(Name="dbo.Kategoria_Czesci")]
	public partial class Kategoria_Czesci : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr_Kategorii;
		
		private string _Nazwa;
		
		private EntitySet<Sprzedaz> _Sprzedazs;
		
		private EntitySet<Czesc_Zamienna> _Czesc_Zamiennas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNr_KategoriiChanging(int value);
    partial void OnNr_KategoriiChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    #endregion
		
		public Kategoria_Czesci()
		{
			this._Sprzedazs = new EntitySet<Sprzedaz>(new Action<Sprzedaz>(this.attach_Sprzedazs), new Action<Sprzedaz>(this.detach_Sprzedazs));
			this._Czesc_Zamiennas = new EntitySet<Czesc_Zamienna>(new Action<Czesc_Zamienna>(this.attach_Czesc_Zamiennas), new Action<Czesc_Zamienna>(this.detach_Czesc_Zamiennas));
			OnCreated();
		}
		
		[Column(Storage="_Nr_Kategorii", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nr_Kategorii
		{
			get
			{
				return this._Nr_Kategorii;
			}
			set
			{
				if ((this._Nr_Kategorii != value))
				{
					this.OnNr_KategoriiChanging(value);
					this.SendPropertyChanging();
					this._Nr_Kategorii = value;
					this.SendPropertyChanged("Nr_Kategorii");
					this.OnNr_KategoriiChanged();
				}
			}
		}
		
		[Column(Storage="_Nazwa", DbType="NVarChar(100)")]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[Association(Name="Kategoria_Czesci_Sprzedaz", Storage="_Sprzedazs", ThisKey="Nr_Kategorii", OtherKey="Nr_Kategorii")]
		public EntitySet<Sprzedaz> Sprzedazs
		{
			get
			{
				return this._Sprzedazs;
			}
			set
			{
				this._Sprzedazs.Assign(value);
			}
		}
		
		[Association(Name="Kategoria_Czesci_Czesc_Zamienna", Storage="_Czesc_Zamiennas", ThisKey="Nr_Kategorii", OtherKey="Nr_Kategorii")]
		public EntitySet<Czesc_Zamienna> Czesc_Zamiennas
		{
			get
			{
				return this._Czesc_Zamiennas;
			}
			set
			{
				this._Czesc_Zamiennas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sprzedazs(Sprzedaz entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria_Czesci = this;
		}
		
		private void detach_Sprzedazs(Sprzedaz entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria_Czesci = null;
		}
		
		private void attach_Czesc_Zamiennas(Czesc_Zamienna entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria_Czesci = this;
		}
		
		private void detach_Czesc_Zamiennas(Czesc_Zamienna entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria_Czesci = null;
		}
	}
	
	[Table(Name="dbo.Firma")]
	public partial class Firma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr_Firmy;
		
		private string _Nazwa;
		
		private int _Nr_Lokalizacji;
		
		private EntitySet<Sprzedaz> _Sprzedazs;
		
		private EntityRef<Lokalizacja> _Lokalizacja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNr_FirmyChanging(int value);
    partial void OnNr_FirmyChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnNr_LokalizacjiChanging(int value);
    partial void OnNr_LokalizacjiChanged();
    #endregion
		
		public Firma()
		{
			this._Sprzedazs = new EntitySet<Sprzedaz>(new Action<Sprzedaz>(this.attach_Sprzedazs), new Action<Sprzedaz>(this.detach_Sprzedazs));
			this._Lokalizacja = default(EntityRef<Lokalizacja>);
			OnCreated();
		}
		
		[Column(Storage="_Nr_Firmy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nr_Firmy
		{
			get
			{
				return this._Nr_Firmy;
			}
			set
			{
				if ((this._Nr_Firmy != value))
				{
					this.OnNr_FirmyChanging(value);
					this.SendPropertyChanging();
					this._Nr_Firmy = value;
					this.SendPropertyChanged("Nr_Firmy");
					this.OnNr_FirmyChanged();
				}
			}
		}
		
		[Column(Storage="_Nazwa", DbType="NVarChar(100)")]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Lokalizacji", DbType="Int NOT NULL")]
		public int Nr_Lokalizacji
		{
			get
			{
				return this._Nr_Lokalizacji;
			}
			set
			{
				if ((this._Nr_Lokalizacji != value))
				{
					if (this._Lokalizacja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_LokalizacjiChanging(value);
					this.SendPropertyChanging();
					this._Nr_Lokalizacji = value;
					this.SendPropertyChanged("Nr_Lokalizacji");
					this.OnNr_LokalizacjiChanged();
				}
			}
		}
		
		[Association(Name="Firma_Sprzedaz", Storage="_Sprzedazs", ThisKey="Nr_Firmy", OtherKey="Nr_Firmy")]
		public EntitySet<Sprzedaz> Sprzedazs
		{
			get
			{
				return this._Sprzedazs;
			}
			set
			{
				this._Sprzedazs.Assign(value);
			}
		}
		
		[Association(Name="Lokalizacja_Firma", Storage="_Lokalizacja", ThisKey="Nr_Lokalizacji", OtherKey="Nr_Lokalizacji", IsForeignKey=true)]
		public Lokalizacja Lokalizacja
		{
			get
			{
				return this._Lokalizacja.Entity;
			}
			set
			{
				Lokalizacja previousValue = this._Lokalizacja.Entity;
				if (((previousValue != value) 
							|| (this._Lokalizacja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lokalizacja.Entity = null;
						previousValue.Firmas.Remove(this);
					}
					this._Lokalizacja.Entity = value;
					if ((value != null))
					{
						value.Firmas.Add(this);
						this._Nr_Lokalizacji = value.Nr_Lokalizacji;
					}
					else
					{
						this._Nr_Lokalizacji = default(int);
					}
					this.SendPropertyChanged("Lokalizacja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sprzedazs(Sprzedaz entity)
		{
			this.SendPropertyChanging();
			entity.Firma = this;
		}
		
		private void detach_Sprzedazs(Sprzedaz entity)
		{
			this.SendPropertyChanging();
			entity.Firma = null;
		}
	}
	
	[Table(Name="dbo.Data")]
	public partial class Data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _PK_Date;
		
		private int _Year;
		
		private int _Day_Of_Year;
		
		private int _Day_Of_Quarter;
		
		private int _Day_Of_Month;
		
		private int _Day_Of_Week;
		
		private int _Week_Of_Year;
		
		private int _Month_Of_Year;
		
		private int _Month_Of_Quarter;
		
		private int _Quarter_Of_Year;
		
		private EntitySet<Zamowienie> _Zamowienies;
		
		private EntitySet<Sprzedaz> _Sprzedazs;
		
		private EntitySet<Reklamacja> _Reklamacjas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_DateChanging(System.DateTime value);
    partial void OnPK_DateChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnDay_Of_YearChanging(int value);
    partial void OnDay_Of_YearChanged();
    partial void OnDay_Of_QuarterChanging(int value);
    partial void OnDay_Of_QuarterChanged();
    partial void OnDay_Of_MonthChanging(int value);
    partial void OnDay_Of_MonthChanged();
    partial void OnDay_Of_WeekChanging(int value);
    partial void OnDay_Of_WeekChanged();
    partial void OnWeek_Of_YearChanging(int value);
    partial void OnWeek_Of_YearChanged();
    partial void OnMonth_Of_YearChanging(int value);
    partial void OnMonth_Of_YearChanged();
    partial void OnMonth_Of_QuarterChanging(int value);
    partial void OnMonth_Of_QuarterChanged();
    partial void OnQuarter_Of_YearChanging(int value);
    partial void OnQuarter_Of_YearChanged();
    #endregion
		
		public Data()
		{
			this._Zamowienies = new EntitySet<Zamowienie>(new Action<Zamowienie>(this.attach_Zamowienies), new Action<Zamowienie>(this.detach_Zamowienies));
			this._Sprzedazs = new EntitySet<Sprzedaz>(new Action<Sprzedaz>(this.attach_Sprzedazs), new Action<Sprzedaz>(this.detach_Sprzedazs));
			this._Reklamacjas = new EntitySet<Reklamacja>(new Action<Reklamacja>(this.attach_Reklamacjas), new Action<Reklamacja>(this.detach_Reklamacjas));
			OnCreated();
		}
		
		[Column(Storage="_PK_Date", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime PK_Date
		{
			get
			{
				return this._PK_Date;
			}
			set
			{
				if ((this._PK_Date != value))
				{
					this.OnPK_DateChanging(value);
					this.SendPropertyChanging();
					this._PK_Date = value;
					this.SendPropertyChanged("PK_Date");
					this.OnPK_DateChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Day_Of_Year", DbType="Int NOT NULL")]
		public int Day_Of_Year
		{
			get
			{
				return this._Day_Of_Year;
			}
			set
			{
				if ((this._Day_Of_Year != value))
				{
					this.OnDay_Of_YearChanging(value);
					this.SendPropertyChanging();
					this._Day_Of_Year = value;
					this.SendPropertyChanged("Day_Of_Year");
					this.OnDay_Of_YearChanged();
				}
			}
		}
		
		[Column(Storage="_Day_Of_Quarter", DbType="Int NOT NULL")]
		public int Day_Of_Quarter
		{
			get
			{
				return this._Day_Of_Quarter;
			}
			set
			{
				if ((this._Day_Of_Quarter != value))
				{
					this.OnDay_Of_QuarterChanging(value);
					this.SendPropertyChanging();
					this._Day_Of_Quarter = value;
					this.SendPropertyChanged("Day_Of_Quarter");
					this.OnDay_Of_QuarterChanged();
				}
			}
		}
		
		[Column(Storage="_Day_Of_Month", DbType="Int NOT NULL")]
		public int Day_Of_Month
		{
			get
			{
				return this._Day_Of_Month;
			}
			set
			{
				if ((this._Day_Of_Month != value))
				{
					this.OnDay_Of_MonthChanging(value);
					this.SendPropertyChanging();
					this._Day_Of_Month = value;
					this.SendPropertyChanged("Day_Of_Month");
					this.OnDay_Of_MonthChanged();
				}
			}
		}
		
		[Column(Storage="_Day_Of_Week", DbType="Int NOT NULL")]
		public int Day_Of_Week
		{
			get
			{
				return this._Day_Of_Week;
			}
			set
			{
				if ((this._Day_Of_Week != value))
				{
					this.OnDay_Of_WeekChanging(value);
					this.SendPropertyChanging();
					this._Day_Of_Week = value;
					this.SendPropertyChanged("Day_Of_Week");
					this.OnDay_Of_WeekChanged();
				}
			}
		}
		
		[Column(Storage="_Week_Of_Year", DbType="Int NOT NULL")]
		public int Week_Of_Year
		{
			get
			{
				return this._Week_Of_Year;
			}
			set
			{
				if ((this._Week_Of_Year != value))
				{
					this.OnWeek_Of_YearChanging(value);
					this.SendPropertyChanging();
					this._Week_Of_Year = value;
					this.SendPropertyChanged("Week_Of_Year");
					this.OnWeek_Of_YearChanged();
				}
			}
		}
		
		[Column(Storage="_Month_Of_Year", DbType="Int NOT NULL")]
		public int Month_Of_Year
		{
			get
			{
				return this._Month_Of_Year;
			}
			set
			{
				if ((this._Month_Of_Year != value))
				{
					this.OnMonth_Of_YearChanging(value);
					this.SendPropertyChanging();
					this._Month_Of_Year = value;
					this.SendPropertyChanged("Month_Of_Year");
					this.OnMonth_Of_YearChanged();
				}
			}
		}
		
		[Column(Storage="_Month_Of_Quarter", DbType="Int NOT NULL")]
		public int Month_Of_Quarter
		{
			get
			{
				return this._Month_Of_Quarter;
			}
			set
			{
				if ((this._Month_Of_Quarter != value))
				{
					this.OnMonth_Of_QuarterChanging(value);
					this.SendPropertyChanging();
					this._Month_Of_Quarter = value;
					this.SendPropertyChanged("Month_Of_Quarter");
					this.OnMonth_Of_QuarterChanged();
				}
			}
		}
		
		[Column(Storage="_Quarter_Of_Year", DbType="Int NOT NULL")]
		public int Quarter_Of_Year
		{
			get
			{
				return this._Quarter_Of_Year;
			}
			set
			{
				if ((this._Quarter_Of_Year != value))
				{
					this.OnQuarter_Of_YearChanging(value);
					this.SendPropertyChanging();
					this._Quarter_Of_Year = value;
					this.SendPropertyChanged("Quarter_Of_Year");
					this.OnQuarter_Of_YearChanged();
				}
			}
		}
		
		[Association(Name="Data_Zamowienie", Storage="_Zamowienies", ThisKey="PK_Date", OtherKey="Data_Zamowienia")]
		public EntitySet<Zamowienie> Zamowienies
		{
			get
			{
				return this._Zamowienies;
			}
			set
			{
				this._Zamowienies.Assign(value);
			}
		}
		
		[Association(Name="Data_Sprzedaz", Storage="_Sprzedazs", ThisKey="PK_Date", OtherKey="Data_Sprzedazy")]
		public EntitySet<Sprzedaz> Sprzedazs
		{
			get
			{
				return this._Sprzedazs;
			}
			set
			{
				this._Sprzedazs.Assign(value);
			}
		}
		
		[Association(Name="Data_Reklamacja", Storage="_Reklamacjas", ThisKey="PK_Date", OtherKey="Data")]
		public EntitySet<Reklamacja> Reklamacjas
		{
			get
			{
				return this._Reklamacjas;
			}
			set
			{
				this._Reklamacjas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zamowienies(Zamowienie entity)
		{
			this.SendPropertyChanging();
			entity.Data = this;
		}
		
		private void detach_Zamowienies(Zamowienie entity)
		{
			this.SendPropertyChanging();
			entity.Data = null;
		}
		
		private void attach_Sprzedazs(Sprzedaz entity)
		{
			this.SendPropertyChanging();
			entity.Data = this;
		}
		
		private void detach_Sprzedazs(Sprzedaz entity)
		{
			this.SendPropertyChanging();
			entity.Data = null;
		}
		
		private void attach_Reklamacjas(Reklamacja entity)
		{
			this.SendPropertyChanging();
			entity.Data1 = this;
		}
		
		private void detach_Reklamacjas(Reklamacja entity)
		{
			this.SendPropertyChanging();
			entity.Data1 = null;
		}
	}
	
	[Table(Name="dbo.Dostawca")]
	public partial class Dostawca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr_Dostawcy;
		
		private string _Nazwa;
		
		private EntitySet<Zamowienie> _Zamowienies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNr_DostawcyChanging(int value);
    partial void OnNr_DostawcyChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    #endregion
		
		public Dostawca()
		{
			this._Zamowienies = new EntitySet<Zamowienie>(new Action<Zamowienie>(this.attach_Zamowienies), new Action<Zamowienie>(this.detach_Zamowienies));
			OnCreated();
		}
		
		[Column(Storage="_Nr_Dostawcy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nr_Dostawcy
		{
			get
			{
				return this._Nr_Dostawcy;
			}
			set
			{
				if ((this._Nr_Dostawcy != value))
				{
					this.OnNr_DostawcyChanging(value);
					this.SendPropertyChanging();
					this._Nr_Dostawcy = value;
					this.SendPropertyChanged("Nr_Dostawcy");
					this.OnNr_DostawcyChanged();
				}
			}
		}
		
		[Column(Storage="_Nazwa", DbType="NVarChar(100)")]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[Association(Name="Dostawca_Zamowienie", Storage="_Zamowienies", ThisKey="Nr_Dostawcy", OtherKey="Nr_Dostawcy")]
		public EntitySet<Zamowienie> Zamowienies
		{
			get
			{
				return this._Zamowienies;
			}
			set
			{
				this._Zamowienies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zamowienies(Zamowienie entity)
		{
			this.SendPropertyChanging();
			entity.Dostawca = this;
		}
		
		private void detach_Zamowienies(Zamowienie entity)
		{
			this.SendPropertyChanging();
			entity.Dostawca = null;
		}
	}
	
	[Table(Name="dbo.Czesc_Zamienna")]
	public partial class Czesc_Zamienna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nr_Czesci;
		
		private string _Nazwa;
		
		private System.Nullable<int> _Nr_Modelu;
		
		private System.Nullable<int> _Nr_Kategorii;
		
		private System.Nullable<int> _Nr_Czesci_Nadrzednej;
		
		private EntitySet<Zamowienie> _Zamowienies;
		
		private EntitySet<Reklamacja> _Reklamacjas;
		
		private EntitySet<Czesc_Zamienna> _Czesc_Zamiennas;
		
		private EntityRef<Czesc_Zamienna> _Czesc_Zamienna1;
		
		private EntityRef<Kategoria_Czesci> _Kategoria_Czesci;
		
		private EntityRef<Model> _Model;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNr_CzesciChanging(int value);
    partial void OnNr_CzesciChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnNr_ModeluChanging(System.Nullable<int> value);
    partial void OnNr_ModeluChanged();
    partial void OnNr_KategoriiChanging(System.Nullable<int> value);
    partial void OnNr_KategoriiChanged();
    partial void OnNr_Czesci_NadrzednejChanging(System.Nullable<int> value);
    partial void OnNr_Czesci_NadrzednejChanged();
    #endregion
		
		public Czesc_Zamienna()
		{
			this._Zamowienies = new EntitySet<Zamowienie>(new Action<Zamowienie>(this.attach_Zamowienies), new Action<Zamowienie>(this.detach_Zamowienies));
			this._Reklamacjas = new EntitySet<Reklamacja>(new Action<Reklamacja>(this.attach_Reklamacjas), new Action<Reklamacja>(this.detach_Reklamacjas));
			this._Czesc_Zamiennas = new EntitySet<Czesc_Zamienna>(new Action<Czesc_Zamienna>(this.attach_Czesc_Zamiennas), new Action<Czesc_Zamienna>(this.detach_Czesc_Zamiennas));
			this._Czesc_Zamienna1 = default(EntityRef<Czesc_Zamienna>);
			this._Kategoria_Czesci = default(EntityRef<Kategoria_Czesci>);
			this._Model = default(EntityRef<Model>);
			OnCreated();
		}
		
		[Column(Storage="_Nr_Czesci", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nr_Czesci
		{
			get
			{
				return this._Nr_Czesci;
			}
			set
			{
				if ((this._Nr_Czesci != value))
				{
					this.OnNr_CzesciChanging(value);
					this.SendPropertyChanging();
					this._Nr_Czesci = value;
					this.SendPropertyChanged("Nr_Czesci");
					this.OnNr_CzesciChanged();
				}
			}
		}
		
		[Column(Storage="_Nazwa", DbType="NVarChar(50)")]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Modelu", DbType="Int")]
		public System.Nullable<int> Nr_Modelu
		{
			get
			{
				return this._Nr_Modelu;
			}
			set
			{
				if ((this._Nr_Modelu != value))
				{
					if (this._Model.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_ModeluChanging(value);
					this.SendPropertyChanging();
					this._Nr_Modelu = value;
					this.SendPropertyChanged("Nr_Modelu");
					this.OnNr_ModeluChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Kategorii", DbType="Int")]
		public System.Nullable<int> Nr_Kategorii
		{
			get
			{
				return this._Nr_Kategorii;
			}
			set
			{
				if ((this._Nr_Kategorii != value))
				{
					if (this._Kategoria_Czesci.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_KategoriiChanging(value);
					this.SendPropertyChanging();
					this._Nr_Kategorii = value;
					this.SendPropertyChanged("Nr_Kategorii");
					this.OnNr_KategoriiChanged();
				}
			}
		}
		
		[Column(Storage="_Nr_Czesci_Nadrzednej", DbType="Int")]
		public System.Nullable<int> Nr_Czesci_Nadrzednej
		{
			get
			{
				return this._Nr_Czesci_Nadrzednej;
			}
			set
			{
				if ((this._Nr_Czesci_Nadrzednej != value))
				{
					if (this._Czesc_Zamienna1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNr_Czesci_NadrzednejChanging(value);
					this.SendPropertyChanging();
					this._Nr_Czesci_Nadrzednej = value;
					this.SendPropertyChanged("Nr_Czesci_Nadrzednej");
					this.OnNr_Czesci_NadrzednejChanged();
				}
			}
		}
		
		[Association(Name="Czesc_Zamienna_Zamowienie", Storage="_Zamowienies", ThisKey="Nr_Czesci", OtherKey="Nr_Czesci")]
		public EntitySet<Zamowienie> Zamowienies
		{
			get
			{
				return this._Zamowienies;
			}
			set
			{
				this._Zamowienies.Assign(value);
			}
		}
		
		[Association(Name="Czesc_Zamienna_Reklamacja", Storage="_Reklamacjas", ThisKey="Nr_Czesci", OtherKey="Nr_Czesci")]
		public EntitySet<Reklamacja> Reklamacjas
		{
			get
			{
				return this._Reklamacjas;
			}
			set
			{
				this._Reklamacjas.Assign(value);
			}
		}
		
		[Association(Name="Czesc_Zamienna_Czesc_Zamienna", Storage="_Czesc_Zamiennas", ThisKey="Nr_Czesci", OtherKey="Nr_Czesci_Nadrzednej")]
		public EntitySet<Czesc_Zamienna> Czesc_Zamiennas
		{
			get
			{
				return this._Czesc_Zamiennas;
			}
			set
			{
				this._Czesc_Zamiennas.Assign(value);
			}
		}
		
		[Association(Name="Czesc_Zamienna_Czesc_Zamienna", Storage="_Czesc_Zamienna1", ThisKey="Nr_Czesci_Nadrzednej", OtherKey="Nr_Czesci", IsForeignKey=true)]
		public Czesc_Zamienna Czesc_Zamienna1
		{
			get
			{
				return this._Czesc_Zamienna1.Entity;
			}
			set
			{
				Czesc_Zamienna previousValue = this._Czesc_Zamienna1.Entity;
				if (((previousValue != value) 
							|| (this._Czesc_Zamienna1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Czesc_Zamienna1.Entity = null;
						previousValue.Czesc_Zamiennas.Remove(this);
					}
					this._Czesc_Zamienna1.Entity = value;
					if ((value != null))
					{
						value.Czesc_Zamiennas.Add(this);
						this._Nr_Czesci_Nadrzednej = value.Nr_Czesci;
					}
					else
					{
						this._Nr_Czesci_Nadrzednej = default(Nullable<int>);
					}
					this.SendPropertyChanged("Czesc_Zamienna1");
				}
			}
		}
		
		[Association(Name="Kategoria_Czesci_Czesc_Zamienna", Storage="_Kategoria_Czesci", ThisKey="Nr_Kategorii", OtherKey="Nr_Kategorii", IsForeignKey=true)]
		public Kategoria_Czesci Kategoria_Czesci
		{
			get
			{
				return this._Kategoria_Czesci.Entity;
			}
			set
			{
				Kategoria_Czesci previousValue = this._Kategoria_Czesci.Entity;
				if (((previousValue != value) 
							|| (this._Kategoria_Czesci.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategoria_Czesci.Entity = null;
						previousValue.Czesc_Zamiennas.Remove(this);
					}
					this._Kategoria_Czesci.Entity = value;
					if ((value != null))
					{
						value.Czesc_Zamiennas.Add(this);
						this._Nr_Kategorii = value.Nr_Kategorii;
					}
					else
					{
						this._Nr_Kategorii = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kategoria_Czesci");
				}
			}
		}
		
		[Association(Name="Model_Czesc_Zamienna", Storage="_Model", ThisKey="Nr_Modelu", OtherKey="Nr_Modelu", IsForeignKey=true)]
		public Model Model
		{
			get
			{
				return this._Model.Entity;
			}
			set
			{
				Model previousValue = this._Model.Entity;
				if (((previousValue != value) 
							|| (this._Model.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Model.Entity = null;
						previousValue.Czesc_Zamiennas.Remove(this);
					}
					this._Model.Entity = value;
					if ((value != null))
					{
						value.Czesc_Zamiennas.Add(this);
						this._Nr_Modelu = value.Nr_Modelu;
					}
					else
					{
						this._Nr_Modelu = default(Nullable<int>);
					}
					this.SendPropertyChanged("Model");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zamowienies(Zamowienie entity)
		{
			this.SendPropertyChanging();
			entity.Czesc_Zamienna = this;
		}
		
		private void detach_Zamowienies(Zamowienie entity)
		{
			this.SendPropertyChanging();
			entity.Czesc_Zamienna = null;
		}
		
		private void attach_Reklamacjas(Reklamacja entity)
		{
			this.SendPropertyChanging();
			entity.Czesc_Zamienna = this;
		}
		
		private void detach_Reklamacjas(Reklamacja entity)
		{
			this.SendPropertyChanging();
			entity.Czesc_Zamienna = null;
		}
		
		private void attach_Czesc_Zamiennas(Czesc_Zamienna entity)
		{
			this.SendPropertyChanging();
			entity.Czesc_Zamienna1 = this;
		}
		
		private void detach_Czesc_Zamiennas(Czesc_Zamienna entity)
		{
			this.SendPropertyChanging();
			entity.Czesc_Zamienna1 = null;
		}
	}
}
#pragma warning restore 1591
