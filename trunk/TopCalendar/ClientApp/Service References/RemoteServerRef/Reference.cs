//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientApp.RemoteServerRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseCalendarEntry", Namespace="http://schemas.datacontract.org/2004/07/ServerLib.Domain")]
    [System.SerializableAttribute()]
    public partial class BaseCalendarEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desc {
            get {
                return this.DescField;
            }
            set {
                if ((object.ReferenceEquals(this.DescField, value) != true)) {
                    this.DescField = value;
                    this.RaisePropertyChanged("Desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RemoteServerRef.IServer")]
    public interface IServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/Add", ReplyAction="http://tempuri.org/IServer/AddResponse")]
        void Add(ClientApp.RemoteServerRef.BaseCalendarEntry e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/Edit", ReplyAction="http://tempuri.org/IServer/EditResponse")]
        void Edit(ClientApp.RemoteServerRef.BaseCalendarEntry e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/EntryEdited", ReplyAction="http://tempuri.org/IServer/EntryEditedResponse")]
        void EntryEdited(ClientApp.RemoteServerRef.BaseCalendarEntry e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/Remove", ReplyAction="http://tempuri.org/IServer/RemoveResponse")]
        void Remove(ClientApp.RemoteServerRef.BaseCalendarEntry e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/GetTasksForDate", ReplyAction="http://tempuri.org/IServer/GetTasksForDateResponse")]
        System.Collections.Generic.List<ClientApp.RemoteServerRef.BaseCalendarEntry> GetTasksForDate(int day, int month, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/get_Count", ReplyAction="http://tempuri.org/IServer/get_CountResponse")]
        int get_Count();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/Enumerate", ReplyAction="http://tempuri.org/IServer/EnumerateResponse")]
        System.Collections.Generic.List<ClientApp.RemoteServerRef.BaseCalendarEntry> Enumerate();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IServerChannel : ClientApp.RemoteServerRef.IServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ServerClient : System.ServiceModel.ClientBase<ClientApp.RemoteServerRef.IServer>, ClientApp.RemoteServerRef.IServer {
        
        public ServerClient() {
        }
        
        public ServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(ClientApp.RemoteServerRef.BaseCalendarEntry e) {
            base.Channel.Add(e);
        }
        
        public void Edit(ClientApp.RemoteServerRef.BaseCalendarEntry e) {
            base.Channel.Edit(e);
        }
        
        public void EntryEdited(ClientApp.RemoteServerRef.BaseCalendarEntry e) {
            base.Channel.EntryEdited(e);
        }
        
        public void Remove(ClientApp.RemoteServerRef.BaseCalendarEntry e) {
            base.Channel.Remove(e);
        }
        
        public System.Collections.Generic.List<ClientApp.RemoteServerRef.BaseCalendarEntry> GetTasksForDate(int day, int month, int year) {
            return base.Channel.GetTasksForDate(day, month, year);
        }
        
        public int get_Count() {
            return base.Channel.get_Count();
        }
        
        public System.Collections.Generic.List<ClientApp.RemoteServerRef.BaseCalendarEntry> Enumerate() {
            return base.Channel.Enumerate();
        }
    }
}
