<UserControl x:Class="TopCalendar.UI.Modules.TaskViewer.TaskView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:Converters="clr-namespace:TopCalendar.Utility.UI.Converters;assembly=TopCalendar.Utility"             
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"   
    xmlns:val="clr-namespace:Bennedik.Validation.Integration.WPF;assembly=Bennedik.Validation.Integration.WPF"   
    xmlns:avalon="http://schemas.AvalonControls/AvalonControlsLibrary/Controls"
    
    x:Name="UserTaskControl"
             >

    <UserControl.Resources>
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibleConverter"/>    
        <Style x:Key="FormButton" TargetType="Button">
            <Setter Property="Margin" Value="5" />
        </Style>
        <Style x:Key="FormLabel" TargetType="Label">
            <Setter Property="Margin" Value="5" />
        </Style>
        <Style x:Key="FormTextBox" TargetType="TextBox">
            <Setter Property="Margin" Value="5" />
        </Style>
    </UserControl.Resources>
    <val:ErrorProvider x:Name="ValidationErrorProvider">
        <Grid Width="500" Height="250">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="*" />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="130" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label             
            Grid.Column="0" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Right">
                Nazwa
            </Label>

            <TextBox 
            Margin="5"
            x:Name="NameTextBox" Grid.Column="1" Grid.Row="0"
                     HorizontalAlignment="Stretch"                  
                     Text="{Binding  
                        Path=Task.Name, 
                        UpdateSourceTrigger=PropertyChanged}"                 
            />

            <Label             
            
            Grid.Column="0" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Right">
                Data rozpoczęcia
            </Label>
            
            <avalon:DateTimePicker Grid.Column="1" Grid.Row="1"
                                                                      
                                   />
            <!--DateTimeSelected="{Binding Path=Task.StartAt, UpdateSourceTrigger=PropertyChanged}"-->
            <!--<TextBox 
            Margin="5"
            x:Name="StartAtTextBox" Grid.Column="1" Grid.Row="1"
                     HorizontalAlignment="Stretch"                  
                     Text="{Binding  
                        Path=Task.StartAt,
                        UpdateSourceTrigger=PropertyChanged}"                 
            />-->

            <Label Grid.Column="0" Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Right">
                Data zakończenia
            </Label>
            <avalon:DateTimePicker Grid.Column="1" Grid.Row="2"
                                   DateTimeSelected="{Binding Path=Task.FinishAt, UpdateSourceTrigger=PropertyChanged}"
                                   />
            <!--<TextBox             
           Margin="5"
            x:Name="EndAtTextBox" Grid.Column="1" Grid.Row="2"
                     HorizontalAlignment="Stretch"                  
                     Text="{Binding  
                        Path=Task.FinishAt,  
                        UpdateSourceTrigger=PropertyChanged}"                 
        />-->

            <Label 
            
            Grid.Column="0" Grid.Row="3" VerticalAlignment="Top" HorizontalAlignment="Right">
                Opis
            </Label>
            <TextBox 
            Margin="5"
                       x:Name="DescriptionTextBlock"
                       TextWrapping="Wrap" 
                       AcceptsReturn="True"
                       VerticalScrollBarVisibility="Visible"
                       Text="{Binding Path=Task.Description, UpdateSourceTrigger=PropertyChanged}"
                       Grid.Column="1" Grid.Row="3" HorizontalAlignment="Stretch"
                       />

            <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal">
                <Button 
                Margin="5"
                x:Name="UpdateButton"   
                Visibility="{Binding UpdateButtonVisible, Converter={StaticResource BoolToVisibleConverter}}"
                Command="{Binding UpdateCommand}"
                CommandParameter="{Binding Task}"
                >Aktualizuj</Button>
                <Button 
                Margin="5"
                Visibility="{Binding AddButtonVisible, Converter={StaticResource BoolToVisibleConverter}}"
                Name="AddButton" Command="{Binding AddCommand}"
                CommandParameter="{Binding Task}"
                >Dodaj</Button>
                <Button 
                Margin="5"
                Name="CancelButton" IsCancel="True" Command="{Binding CancelCommand}">Anuluj</Button>
            </StackPanel>
        </Grid>
    </val:ErrorProvider>
</UserControl>
